{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/state-cast/src/components/About.js\";\nimport React from 'react';\nimport { Stack, Divider, Typography, Link } from '@mui/material';\nimport { docs } from '../machines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      m: 4\n    },\n    children: [\"Statecast is a collection of xstate state machines running in a browser. These are the machines.\", /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        width: '100%',\n        m: t => t.spacing(1, 0)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), Object.keys(docs).map(doc => /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          textTransform: 'capitalize'\n        },\n        children: doc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: docs[doc].machine.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: docs[doc].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          width: '100%',\n          m: t => t.spacing(1, 0)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), docs[doc].machine.id, \" has the following states:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(docs[doc].states).map(state => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: docs[doc].states[state]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Click\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          href: docs[doc].url,\n          target: \"_blank\",\n          children: \"here to view the state machine diagram.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, doc, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)), \"t\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","Stack","Divider","Typography","Link","docs","About","m","width","t","spacing","Object","keys","map","doc","mb","textTransform","machine","id","description","states","state","url"],"sources":["/home/miltonejones/projects/state-cast/src/components/About.js"],"sourcesContent":["import React from 'react';\r\nimport { Stack, Divider, Typography, Link } from '@mui/material';\r\n\r\nimport { docs } from '../machines';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Stack sx={{ m: 4 }}>\r\n      Statecast is a collection of xstate state machines running in a browser.\r\n      These are the machines.\r\n      <Divider sx={{ width: '100%', m: (t) => t.spacing(1, 0) }} />\r\n      {Object.keys(docs).map((doc) => (\r\n        <Stack sx={{ mb: 2 }} key={doc}>\r\n          <Typography variant=\"h6\" sx={{ textTransform: 'capitalize' }}>\r\n            {doc}\r\n          </Typography>\r\n          <Typography variant=\"caption\">\r\n            <em>{docs[doc].machine.id}</em>\r\n          </Typography>\r\n          <Typography variant=\"body2\">{docs[doc].description}</Typography>\r\n          <Divider sx={{ width: '100%', m: (t) => t.spacing(1, 0) }} />\r\n          {docs[doc].machine.id} has the following states:\r\n          <ul>\r\n            {Object.keys(docs[doc].states).map((state) => (\r\n              <li key={state}>\r\n                <Stack>\r\n                  <Typography variant=\"subtitle2\">{state}</Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {docs[doc].states[state]}\r\n                  </Typography>\r\n                </Stack>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Typography>\r\n            Click{' '}\r\n            <Link href={docs[doc].url} target=\"_blank\">\r\n              here to view the state machine diagram.\r\n            </Link>{' '}\r\n          </Typography>\r\n        </Stack>\r\n      ))}\r\n      t\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAEhE,SAASC,IAAI,QAAQ,aAAa;AAAC;AAEnC,MAAMC,KAAK,GAAG,MAAM;EAClB,oBACE,QAAC,KAAK;IAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAA,WAAC,kGAGnB,uBAAC,OAAO;MAAC,EAAE,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAED,CAAC,EAAGE,CAAC,IAAKA,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE,CAAC;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,EAC5DC,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,GAAG,CAAEC,GAAG,iBACzB,QAAC,KAAK;MAAC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAA,wBACnB,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,EAAE,EAAE;UAAEC,aAAa,EAAE;QAAa,CAAE;QAAA,UAC1DF;MAAG;QAAA;QAAA;QAAA;MAAA,QACO,eACb,QAAC,UAAU;QAAC,OAAO,EAAC,SAAS;QAAA,uBAC3B;UAAA,UAAKT,IAAI,CAACS,GAAG,CAAC,CAACG,OAAO,CAACC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QACpB,eACb,QAAC,UAAU;QAAC,OAAO,EAAC,OAAO;QAAA,UAAEb,IAAI,CAACS,GAAG,CAAC,CAACK;MAAW;QAAA;QAAA;QAAA;MAAA,QAAc,eAChE,QAAC,OAAO;QAAC,EAAE,EAAE;UAAEX,KAAK,EAAE,MAAM;UAAED,CAAC,EAAGE,CAAC,IAAKA,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE,CAAC;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,EAC5DL,IAAI,CAACS,GAAG,CAAC,CAACG,OAAO,CAACC,EAAE,EAAC,4BACtB;QAAA,UACGP,MAAM,CAACC,IAAI,CAACP,IAAI,CAACS,GAAG,CAAC,CAACM,MAAM,CAAC,CAACP,GAAG,CAAEQ,KAAK,iBACvC;UAAA,uBACE,QAAC,KAAK;YAAA,wBACJ,QAAC,UAAU;cAAC,OAAO,EAAC,WAAW;cAAA,UAAEA;YAAK;cAAA;cAAA;cAAA;YAAA,QAAc,eACpD,QAAC,UAAU;cAAC,OAAO,EAAC,OAAO;cAAA,UACxBhB,IAAI,CAACS,GAAG,CAAC,CAACM,MAAM,CAACC,KAAK;YAAC;cAAA;cAAA;cAAA;YAAA,QACb;UAAA;YAAA;YAAA;YAAA;UAAA;QACP,GANDA,KAAK;UAAA;UAAA;UAAA;QAAA,QAQf;MAAC;QAAA;QAAA;QAAA;MAAA,QACC,eACL,QAAC,UAAU;QAAA,WAAC,OACL,EAAC,GAAG,eACT,QAAC,IAAI;UAAC,IAAI,EAAEhB,IAAI,CAACS,GAAG,CAAC,CAACQ,GAAI;UAAC,MAAM,EAAC,QAAQ;UAAA,UAAC;QAE3C;UAAA;UAAA;UAAA;QAAA,QAAO,EAAC,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA,GA3BYR,GAAG;MAAA;MAAA;MAAA;IAAA,QA6B/B,CAAC,EAAC,GAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QAAQ;AAEZ,CAAC;AAAC,KAxCIR,KAAK;AA0CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}