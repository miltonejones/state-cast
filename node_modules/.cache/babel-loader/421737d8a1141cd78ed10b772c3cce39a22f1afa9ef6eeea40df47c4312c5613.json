{"ast":null,"code":"import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { getServiceSnapshot, isService } from './utils';\nexport function isActorWithState(actorRef) {\n  return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n  return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n  return 'getSnapshot' in actorRef ? isService(actorRef) ? getServiceSnapshot(actorRef) : actorRef.getSnapshot() : isActorWithState(actorRef) ? actorRef.state : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n  if (getSnapshot === void 0) {\n    getSnapshot = defaultGetSnapshot;\n  }\n  var actorRefRef = useRef(actorRef);\n  var deferredEventsRef = useRef([]);\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [actorRef]);\n  var boundGetSnapshot = useCallback(function () {\n    return getSnapshot(actorRef);\n  }, [actorRef, getSnapshot]);\n  var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n  var send = useConstant(function () {\n    return function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var event = args[0];\n      if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n        console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n      }\n      var currentActorRef = actorRefRef.current;\n      // If the previous actor is a deferred actor,\n      // queue the events so that they can be replayed\n      // on the non-deferred actor.\n      if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n        deferredEventsRef.current.push(event);\n      } else {\n        currentActorRef.send(event);\n      }\n    };\n  });\n  useIsomorphicLayoutEffect(function () {\n    actorRefRef.current = actorRef;\n    // Dequeue deferred events from the previous deferred actorRef\n    while (deferredEventsRef.current.length > 0) {\n      var deferredEvent = deferredEventsRef.current.shift();\n      actorRef.send(deferredEvent);\n    }\n  }, [actorRef]);\n  return [storeSnapshot, send];\n}","map":{"version":3,"names":["useRef","useCallback","useIsomorphicLayoutEffect","useConstant","useSyncExternalStore","getServiceSnapshot","isService","isActorWithState","actorRef","isDeferredActor","defaultGetSnapshot","getSnapshot","state","undefined","useActor","actorRefRef","deferredEventsRef","subscribe","handleStoreChange","unsubscribe","boundGetSnapshot","storeSnapshot","send","args","_i","arguments","length","event","process","env","NODE_ENV","console","warn","concat","JSON","stringify","currentActorRef","current","deferred","push","deferredEvent","shift"],"sources":["/home/miltonejones/projects/state-cast/node_modules/@xstate/react/es/useActor.js"],"sourcesContent":["import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { getServiceSnapshot, isService } from './utils';\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? isService(actorRef)\n            ? getServiceSnapshot(actorRef)\n            : actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [\n        actorRef,\n        getSnapshot\n    ]);\n    var storeSnapshot = useSyncExternalStore(subscribe, boundGetSnapshot, boundGetSnapshot);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}