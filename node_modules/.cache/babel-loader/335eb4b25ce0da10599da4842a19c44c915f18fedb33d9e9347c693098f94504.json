{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/state-cast/src/components/Subscriptions.js\";\nimport React from 'react';\nimport { Stack, Box, Card, Typography, CardMedia, CardContent } from '@mui/material';\nimport { Btn } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CastCard = _ref => {\n  let {\n    subscription,\n    send,\n    source\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onClick: () => {\n      send({\n        type: 'DETAIL',\n        podcast: subscription,\n        source\n      });\n    },\n    sx: {\n      width: '9vw',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      width: \"100%\",\n      height: \"auto\",\n      sx: {\n        borderRadius: 2\n      },\n      image: subscription.artworkUrl100,\n      alt: subscription.trackName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis'\n        },\n        color: \"text.secondary\",\n        children: subscription.trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, subscription.artworkUrl100, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = CastCard;\nexport const SubscriptionList = _ref2 => {\n  let {\n    subscriptions,\n    send,\n    source,\n    limit,\n    view\n  } = _ref2;\n  const visible = !limit ? subscriptions : subscriptions.slice(0, limit);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2\n        },\n        children: [subscriptions.length, \" Subscriptions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), view !== 'subs' && /*#__PURE__*/_jsxDEV(Btn, {\n        endIcon: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrow-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this),\n        onClick: () => send({\n          type: 'LINK',\n          view: 'subs'\n        }),\n        children: \"view all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '50vw',\n        pt: 2,\n        gap: 2,\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr'\n      },\n      children: visible.map((subscription, i) => /*#__PURE__*/_jsxDEV(CastCard, {\n        subscription: subscription,\n        send: send,\n        source: source\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = SubscriptionList;\nconst Subscriptions = props => {\n  var _props$subscriptions;\n  if (!((_props$subscriptions = props.subscriptions) !== null && _props$subscriptions !== void 0 && _props$subscriptions.length)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"You have no subscriptions\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(SubscriptionList, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n};\n_c3 = Subscriptions;\nSubscriptions.defaultProps = {};\nexport default Subscriptions;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CastCard\");\n$RefreshReg$(_c2, \"SubscriptionList\");\n$RefreshReg$(_c3, \"Subscriptions\");","map":{"version":3,"names":["React","Stack","Box","Card","Typography","CardMedia","CardContent","Btn","CastCard","subscription","send","source","type","podcast","width","cursor","borderRadius","artworkUrl100","trackName","whiteSpace","textOverflow","SubscriptionList","subscriptions","limit","view","visible","slice","alignItems","justifyContent","mt","length","pt","gap","display","gridTemplateColumns","map","i","Subscriptions","props","defaultProps"],"sources":["/home/miltonejones/projects/state-cast/src/components/Subscriptions.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Stack,\r\n  Box,\r\n  Card,\r\n  Typography,\r\n  CardMedia,\r\n  CardContent,\r\n} from '@mui/material';\r\nimport { Btn } from './styled';\r\n\r\nexport const CastCard = ({ subscription, send, source }) => {\r\n  return (\r\n    <Card\r\n      key={subscription.artworkUrl100}\r\n      onClick={() => {\r\n        send({\r\n          type: 'DETAIL',\r\n          podcast: subscription,\r\n          source,\r\n        });\r\n      }}\r\n      sx={{ width: '9vw', cursor: 'pointer' }}\r\n    >\r\n      <CardMedia\r\n        component=\"img\"\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        sx={{ borderRadius: 2 }}\r\n        image={subscription.artworkUrl100}\r\n        alt={subscription.trackName}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}\r\n          color=\"text.secondary\"\r\n        >\r\n          {subscription.trackName}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const SubscriptionList = ({\r\n  subscriptions,\r\n  send,\r\n  source,\r\n  limit,\r\n  view,\r\n}) => {\r\n  const visible = !limit ? subscriptions : subscriptions.slice(0, limit);\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{ alignItems: 'center', justifyContent: 'space-between' }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n          {subscriptions.length} Subscriptions\r\n        </Typography>\r\n\r\n        {view !== 'subs' && (\r\n          <Btn\r\n            endIcon={<i class=\"fa-solid fa-arrow-right\"></i>}\r\n            onClick={() =>\r\n              send({\r\n                type: 'LINK',\r\n                view: 'subs',\r\n              })\r\n            }\r\n          >\r\n            view all\r\n          </Btn>\r\n        )}\r\n      </Stack>\r\n\r\n      <Box\r\n        sx={{\r\n          width: '50vw',\r\n          pt: 2,\r\n          gap: 2,\r\n          display: 'grid',\r\n          gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr',\r\n        }}\r\n      >\r\n        {visible.map((subscription, i) => (\r\n          <CastCard\r\n            key={i}\r\n            subscription={subscription}\r\n            send={send}\r\n            source={source}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Subscriptions = (props) => {\r\n  if (!props.subscriptions?.length) {\r\n    return <>You have no subscriptions</>;\r\n  }\r\n\r\n  return <SubscriptionList {...props} />;\r\n};\r\nSubscriptions.defaultProps = {};\r\nexport default Subscriptions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}