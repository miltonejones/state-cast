{"ast":null,"code":"var isArray = require('./array-helper').isArray;\nmodule.exports = {\n  copyOptions: function (options) {\n    var key,\n      copy = {};\n    for (key in options) {\n      if (options.hasOwnProperty(key)) {\n        copy[key] = options[key];\n      }\n    }\n    return copy;\n  },\n  ensureFlagExists: function (item, options) {\n    if (!(item in options) || typeof options[item] !== 'boolean') {\n      options[item] = false;\n    }\n  },\n  ensureSpacesExists: function (options) {\n    if (!('spaces' in options) || typeof options.spaces !== 'number' && typeof options.spaces !== 'string') {\n      options.spaces = 0;\n    }\n  },\n  ensureAlwaysArrayExists: function (options) {\n    if (!('alwaysArray' in options) || typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray)) {\n      options.alwaysArray = false;\n    }\n  },\n  ensureKeyExists: function (key, options) {\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\n      options[key + 'Key'] = options.compact ? '_' + key : key;\n    }\n  },\n  checkFnExists: function (key, options) {\n    return key + 'Fn' in options;\n  }\n};","map":{"version":3,"names":["isArray","require","module","exports","copyOptions","options","key","copy","hasOwnProperty","ensureFlagExists","item","ensureSpacesExists","spaces","ensureAlwaysArrayExists","alwaysArray","ensureKeyExists","compact","checkFnExists"],"sources":["/home/miltonejones/projects/state-cast/node_modules/xml-js/lib/options-helper.js"],"sourcesContent":["var isArray = require('./array-helper').isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAgB,CAAC,CAACD,OAAO;AAE/CE,MAAM,CAACC,OAAO,GAAG;EAEfC,WAAW,EAAE,UAAUC,OAAO,EAAE;IAC9B,IAAIC,GAAG;MAAEC,IAAI,GAAG,CAAC,CAAC;IAClB,KAAKD,GAAG,IAAID,OAAO,EAAE;MACnB,IAAIA,OAAO,CAACG,cAAc,CAACF,GAAG,CAAC,EAAE;QAC/BC,IAAI,CAACD,GAAG,CAAC,GAAGD,OAAO,CAACC,GAAG,CAAC;MAC1B;IACF;IACA,OAAOC,IAAI;EACb,CAAC;EAEDE,gBAAgB,EAAE,UAAUC,IAAI,EAAEL,OAAO,EAAE;IACzC,IAAI,EAAEK,IAAI,IAAIL,OAAO,CAAC,IAAI,OAAOA,OAAO,CAACK,IAAI,CAAC,KAAK,SAAS,EAAE;MAC5DL,OAAO,CAACK,IAAI,CAAC,GAAG,KAAK;IACvB;EACF,CAAC;EAEDC,kBAAkB,EAAE,UAAUN,OAAO,EAAE;IACrC,IAAI,EAAE,QAAQ,IAAIA,OAAO,CAAC,IAAK,OAAOA,OAAO,CAACO,MAAM,KAAK,QAAQ,IAAI,OAAOP,OAAO,CAACO,MAAM,KAAK,QAAS,EAAE;MACxGP,OAAO,CAACO,MAAM,GAAG,CAAC;IACpB;EACF,CAAC;EAEDC,uBAAuB,EAAE,UAAUR,OAAO,EAAE;IAC1C,IAAI,EAAE,aAAa,IAAIA,OAAO,CAAC,IAAK,OAAOA,OAAO,CAACS,WAAW,KAAK,SAAS,IAAI,CAACd,OAAO,CAACK,OAAO,CAACS,WAAW,CAAE,EAAE;MAC9GT,OAAO,CAACS,WAAW,GAAG,KAAK;IAC7B;EACF,CAAC;EAEDC,eAAe,EAAE,UAAUT,GAAG,EAAED,OAAO,EAAE;IACvC,IAAI,EAAEC,GAAG,GAAG,KAAK,IAAID,OAAO,CAAC,IAAI,OAAOA,OAAO,CAACC,GAAG,GAAG,KAAK,CAAC,KAAK,QAAQ,EAAE;MACzED,OAAO,CAACC,GAAG,GAAG,KAAK,CAAC,GAAGD,OAAO,CAACW,OAAO,GAAG,GAAG,GAAGV,GAAG,GAAGA,GAAG;IAC1D;EACF,CAAC;EAEDW,aAAa,EAAE,UAAUX,GAAG,EAAED,OAAO,EAAE;IACrC,OAAOC,GAAG,GAAG,IAAI,IAAID,OAAO;EAC9B;AAEF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}