{"ast":null,"code":"var _jsxFileName = \"/home/miltonejones/projects/state-cast/src/components/StateCarousel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Card, Typography, styled } from '@mui/material';\nimport { useMachine } from '@xstate/react';\nimport { carouselMachine } from '../machines';\nimport { Diagnostics } from '.';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateCarousel = _ref => {\n  _s();\n  let {\n    images,\n    debug\n  } = _ref;\n  const [state, send] = useMachine(carouselMachine, {\n    services: {\n      loadImages: async () => images\n    }\n  });\n  const {\n    running,\n    first,\n    second\n  } = state.context;\n  if (!first) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"No images to display\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Carousel, {\n      children: [/*#__PURE__*/_jsxDEV(Slide, {\n        onClick: first.onClick,\n        first: true,\n        src: first.src,\n        moving: running\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slide, {\n        src: second.src,\n        moving: running\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Caption, {\n        moving: running,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          variant: \"h6\",\n          children: first.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          variant: \"body2\",\n          children: first.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Diagnostics, {\n      open: debug,\n      id: carouselMachine.id,\n      state: state,\n      send: send,\n      states: carouselMachine.states\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StateCarousel, \"JVZoiky6zIyU73HZ029PEtS3QOI=\", false, function () {\n  return [useMachine];\n});\n_c = StateCarousel;\nconst Text = styled(Typography)(() => ({\n  color: 'white',\n  mixBlendMode: 'difference',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  maxWidth: '30vw',\n  width: '100%',\n  lineHeight: 1.1\n}));\n_c2 = Text;\nconst Carousel = styled(Card)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    position: 'relative',\n    width: '100%',\n    height: '35vh',\n    overflow: 'hidden',\n    marginTop: theme.spacing(1),\n    borderRadius: 15,\n    cursor: 'pointer'\n  };\n});\n_c3 = Carousel;\nconst Slide = styled('img')(_ref3 => {\n  let {\n    first,\n    moving\n  } = _ref3;\n  const transition = moving ? 'left 0.4s linear' : 'none';\n  const firstLeft = moving ? '-100%' : 0;\n  const secondLeft = moving ? 0 : '100%';\n  const obj = {\n    width: '100%',\n    position: ' absolute',\n    top: '-70%',\n    transition,\n    left: first ? firstLeft : secondLeft\n  };\n  return obj;\n});\n_c4 = Slide;\nconst Caption = styled(Card)(_ref4 => {\n  let {\n    theme,\n    moving\n  } = _ref4;\n  return {\n    position: 'absolute',\n    bottom: 40,\n    left: 20,\n    minWidth: 300,\n    opacity: moving ? 0 : 0.7,\n    transition: 'opacity 0.4s linear',\n    backgroundColor: theme.palette.common.black,\n    padding: theme.spacing(1, 2)\n  };\n});\n_c5 = Caption;\nexport default StateCarousel;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"StateCarousel\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"Carousel\");\n$RefreshReg$(_c4, \"Slide\");\n$RefreshReg$(_c5, \"Caption\");","map":{"version":3,"names":["React","Card","Typography","styled","useMachine","carouselMachine","Diagnostics","StateCarousel","images","debug","state","send","services","loadImages","running","first","second","context","onClick","src","title","caption","id","states","Text","color","mixBlendMode","whiteSpace","overflow","textOverflow","maxWidth","width","lineHeight","Carousel","theme","position","height","marginTop","spacing","borderRadius","cursor","Slide","moving","transition","firstLeft","secondLeft","obj","top","left","Caption","bottom","minWidth","opacity","backgroundColor","palette","common","black","padding"],"sources":["/home/miltonejones/projects/state-cast/src/components/StateCarousel.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, Typography, styled } from '@mui/material';\r\nimport { useMachine } from '@xstate/react';\r\nimport { carouselMachine } from '../machines';\r\nimport { Diagnostics } from '.';\r\n\r\nconst StateCarousel = ({ images, debug }) => {\r\n  const [state, send] = useMachine(carouselMachine, {\r\n    services: {\r\n      loadImages: async () => images,\r\n    },\r\n  });\r\n  const { running, first, second } = state.context;\r\n  if (!first) return <>No images to display</>;\r\n  return (\r\n    <>\r\n      <Carousel>\r\n        <Slide onClick={first.onClick} first src={first.src} moving={running} />\r\n        <Slide src={second.src} moving={running} />\r\n        <Caption moving={running}>\r\n          <Text variant=\"h6\">{first.title}</Text>\r\n          <Text variant=\"body2\">{first.caption}</Text>\r\n        </Caption>\r\n      </Carousel>\r\n\r\n      <Diagnostics\r\n        open={debug}\r\n        id={carouselMachine.id}\r\n        state={state}\r\n        send={send}\r\n        states={carouselMachine.states}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Text = styled(Typography)(() => ({\r\n  color: 'white',\r\n  mixBlendMode: 'difference',\r\n  whiteSpace: 'nowrap',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  maxWidth: '30vw',\r\n  width: '100%',\r\n  lineHeight: 1.1,\r\n}));\r\n\r\nconst Carousel = styled(Card)(({ theme }) => ({\r\n  position: 'relative',\r\n  width: '100%',\r\n  height: '35vh',\r\n  overflow: 'hidden',\r\n  marginTop: theme.spacing(1),\r\n  borderRadius: 15,\r\n  cursor: 'pointer',\r\n}));\r\n\r\nconst Slide = styled('img')(({ first, moving }) => {\r\n  const transition = moving ? 'left 0.4s linear' : 'none';\r\n  const firstLeft = moving ? '-100%' : 0;\r\n  const secondLeft = moving ? 0 : '100%';\r\n  const obj = {\r\n    width: '100%',\r\n    position: ' absolute',\r\n    top: '-70%',\r\n    transition,\r\n    left: first ? firstLeft : secondLeft,\r\n  };\r\n  return obj;\r\n});\r\n\r\nconst Caption = styled(Card)(({ theme, moving }) => ({\r\n  position: 'absolute',\r\n  bottom: 40,\r\n  left: 20,\r\n  minWidth: 300,\r\n  opacity: moving ? 0 : 0.7,\r\n  transition: 'opacity 0.4s linear',\r\n  backgroundColor: theme.palette.common.black,\r\n  padding: theme.spacing(1, 2),\r\n}));\r\n\r\nexport default StateCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}