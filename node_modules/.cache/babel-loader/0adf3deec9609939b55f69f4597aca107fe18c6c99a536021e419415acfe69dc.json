{"ast":null,"code":"import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { raise, send, errorPlatform, update, error as error$1, log, stop, start, cancel } from './actionTypes.js';\nimport { initEvent, doneInvoke, toActionObjects, resolveActions, error, getActionFunction } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, toObserver, isFunction, toSCXMLEvent, flatten, isPromiseLike, isObservable, isMachine, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, toInvokeSource, uniqueId } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { createDeferredActor, isSpawnedActor } from './Actor.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\nvar Interpreter = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n    var _this = this;\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    this._outgoingQueue = [];\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n        return _this.state;\n      }\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n        return _this.state;\n      }\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n        var nextState = _this._nextState(_event);\n        _this.update(nextState, _event);\n      });\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to, immediate) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n        return;\n      }\n      if ('machine' in target) {\n        // perhaps those events should be rejected in the parent\n        // but atm it doesn't have easy access to all of the information that is required to do it reliably\n        if (_this.status !== InterpreterStatus.Stopped || _this.parent !== target ||\n        // we need to send events to the parent from exit handlers of a machine that reached its final state\n        _this.state.done) {\n          // Send SCXML events to machines\n          var scxmlEvent = __assign(__assign({}, event), {\n            name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n            origin: _this.sessionId\n          });\n          if (!immediate && _this.machine.config.predictableActionArguments) {\n            _this._outgoingQueue.push([target, scxmlEvent]);\n          } else {\n            target.send(scxmlEvent);\n          }\n        }\n      } else {\n        // Send normal events to other targets\n        if (!immediate && _this.machine.config.predictableActionArguments) {\n          _this._outgoingQueue.push([target, event.data]);\n        } else {\n          target.send(event.data);\n        }\n      }\n    };\n    this._exec = function (action, context, _event, actionFunctionMap) {\n      if (actionFunctionMap === void 0) {\n        actionFunctionMap = _this.machine.options.actions;\n      }\n      var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n      var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n      if (exec) {\n        try {\n          return exec(context, _event.data, !_this.machine.config.predictableActionArguments ? {\n            action: action,\n            state: _this.state,\n            _event: _event\n          } : {\n            action: action,\n            _event: _event\n          });\n        } catch (err) {\n          if (_this.parent) {\n            _this.parent.send({\n              type: 'xstate.error',\n              data: err\n            });\n          }\n          throw err;\n        }\n      }\n      switch (action.type) {\n        case send:\n          var sendAction = action;\n          if (typeof sendAction.delay === 'number') {\n            _this.defer(sendAction);\n            return;\n          } else {\n            if (sendAction.to) {\n              _this.sendTo(sendAction._event, sendAction.to, _event === initEvent);\n            } else {\n              _this.send(sendAction._event);\n            }\n          }\n          break;\n        case cancel:\n          _this.cancel(action.sendId);\n          break;\n        case start:\n          {\n            if (_this.status !== InterpreterStatus.Running) {\n              return;\n            }\n            var activity = action.activity; // If the activity will be stopped right after it's started\n            // (such as in transient states)\n            // don't bother starting the activity.\n\n            if (\n            // in v4 with `predictableActionArguments` invokes are called eagerly when the `this.state` still points to the previous state\n            !_this.machine.config.predictableActionArguments && !_this.state.activities[activity.id || activity.type]) {\n              break;\n            } // Invoked services\n\n            if (activity.type === ActionTypes.Invoke) {\n              var invokeSource = toInvokeSource(activity.src);\n              var serviceCreator = _this.machine.options.services ? _this.machine.options.services[invokeSource.type] : undefined;\n              var id = activity.id,\n                data = activity.data;\n              if (!IS_PRODUCTION) {\n                warn(!('forward' in activity),\n                // tslint:disable-next-line:max-line-length\n                \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(_this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n              }\n              var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n              if (!serviceCreator) {\n                // tslint:disable-next-line:no-console\n                if (!IS_PRODUCTION) {\n                  warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(_this.machine.id, \"'.\"));\n                }\n                return;\n              }\n              var resolvedData = data ? mapContext(data, context, _event) : undefined;\n              if (typeof serviceCreator === 'string') {\n                // TODO: warn\n                return;\n              }\n              var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n                data: resolvedData,\n                src: invokeSource,\n                meta: activity.meta\n              }) : serviceCreator;\n              if (!source) {\n                // TODO: warn?\n                return;\n              }\n              var options = void 0;\n              if (isMachine(source)) {\n                source = resolvedData ? source.withContext(resolvedData) : source;\n                options = {\n                  autoForward: autoForward\n                };\n              }\n              _this.spawn(source, id, options);\n            } else {\n              _this.spawnActivity(activity);\n            }\n            break;\n          }\n        case stop:\n          {\n            _this.stopChild(action.activity.id);\n            break;\n          }\n        case log:\n          var label = action.label,\n            value = action.value;\n          if (label) {\n            _this.logger(label, value);\n          } else {\n            _this.logger(value);\n          }\n          break;\n        default:\n          if (!IS_PRODUCTION) {\n            warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n          }\n          break;\n      }\n    };\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n    var clock = resolvedOptions.clock,\n      logger = resolvedOptions.logger,\n      parent = resolvedOptions.parent,\n      id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n      if (this._initialState) {\n        return this._initialState;\n      }\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    /**\r\n     * @deprecated Use `.getSnapshot()` instead.\r\n     */\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n    var _this = this; // Attach session ID to state\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if ((!this.machine.config.predictableActionArguments ||\n    // this is currently required to execute initial actions as the `initialState` gets cached\n    // we can't just recompute it (and execute actions while doing so) because we try to preserve identity of actors created within initial assigns\n    _event === initEvent) && this.options.execute) {\n      this.execute(this.state);\n    } else {\n      var item = void 0;\n      while (item = this._outgoingQueue.shift()) {\n        item[0].send(item[1]);\n      }\n    } // Update children\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    if (this.state.done) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n      this._stop();\n      this._stopChildren();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n    return this;\n  };\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _,\n  // TODO: error listener\n  completeListener) {\n    var _this = this;\n    var observer = toObserver(nextListenerOrObserver, _, completeListener);\n    this.listeners.add(observer.next); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      observer.next(this.state);\n    }\n    var completeOnce = function () {\n      _this.doneListeners.delete(completeOnce);\n      _this.stopListeners.delete(completeOnce);\n      observer.complete();\n    };\n    if (this.status === InterpreterStatus.Stopped) {\n      observer.complete();\n    } else {\n      this.onDone(completeOnce);\n      this.onStop(completeOnce);\n    }\n    return {\n      unsubscribe: function () {\n        _this.listeners.delete(observer.next);\n        _this.doneListeners.delete(completeOnce);\n        _this.stopListeners.delete(completeOnce);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n    this.machine._init();\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  Interpreter.prototype._stopChildren = function () {\n    // TODO: think about converting those to actions\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n    this.children.clear();\n  };\n  Interpreter.prototype._stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n    try {\n      // we are going to stop within the current sync frame\n      // so we can safely just cancel this here as nothing async should be fired anyway\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    } // clear everything that might be enqueued\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n  Interpreter.prototype.stop = function () {\n    // TODO: add warning for stopping non-root interpreters\n    var _this = this; // grab the current scheduler as it will be replaced in _stop\n\n    var scheduler = this.scheduler;\n    this._stop(); // let what is currently processed to be finished\n\n    scheduler.schedule(function () {\n      // it feels weird to handle this here but we need to handle this even slightly \"out of band\"\n      var _event = toSCXMLEvent({\n        type: 'xstate.stop'\n      });\n      var nextState = provide(_this, function () {\n        var exitActions = flatten(__spreadArray([], __read(_this.state.configuration), false).sort(function (a, b) {\n          return b.order - a.order;\n        }).map(function (stateNode) {\n          return toActionObjects(stateNode.onExit, _this.machine.options.actions);\n        }));\n        var _a = __read(resolveActions(_this.machine, _this.state, _this.state.context, _event, [{\n            type: 'exit',\n            actions: exitActions\n          }], _this.machine.config.predictableActionArguments ? _this._exec : undefined, _this.machine.config.predictableActionArguments || _this.machine.config.preserveActionOrder), 2),\n          resolvedActions = _a[0],\n          updatedContext = _a[1];\n        var newState = new State({\n          value: _this.state.value,\n          context: updatedContext,\n          _event: _event,\n          _sessionid: _this.sessionId,\n          historyValue: undefined,\n          history: _this.state,\n          actions: resolvedActions.filter(function (action) {\n            return action.type !== raise && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n          }),\n          activities: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {},\n          done: _this.state.done,\n          tags: _this.state.tags,\n          machine: _this.machine\n        });\n        newState.changed = true;\n        return newState;\n      });\n      _this.update(nextState, _event);\n      _this._stopChildren();\n      registry.free(_this.sessionId);\n    });\n    return this;\n  };\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error(\n      // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n    if (!events.length) {\n      return;\n    }\n    var exec = !!this.machine.config.predictableActionArguments && this._exec;\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n        _this.forward(_event);\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event, undefined, exec || undefined);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(_this.machine.config.predictableActionArguments ? nextState.actions : nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  Interpreter.prototype._nextState = function (event, exec) {\n    var _this = this;\n    if (exec === void 0) {\n      exec = !!this.machine.config.predictableActionArguments && this._exec;\n    }\n    var _event = toSCXMLEvent(event);\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event, undefined, exec || undefined);\n    });\n    return nextState;\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n  Interpreter.prototype.nextState = function (event) {\n    return this._nextState(event, false);\n  };\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to, true);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n    this._exec(action, state.context, state._event, actionFunctionMap);\n  };\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n    if (!child) {\n      return;\n    }\n    this.removeChild(childId);\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (this.status !== InterpreterStatus.Running) {\n      return createDeferredActor(entity, name);\n    }\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n    var actor = childService;\n    this.children.set(childService.id, actor);\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n    var _this = this;\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n        _this.removeChild(id);\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n        var errorEvent = error(id, errorData);\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n          observer.next(response);\n          if (unsubscribed) {\n            return;\n          }\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n    var _this = this;\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n      if (canceled) {\n        return;\n      }\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n    var callbackStop;\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n    var actor = (_a = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n    var _this = this;\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n      return;\n    } // Start implementation\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n    this.children.set(id, (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n      registerService(this);\n    }\n  };\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (fn, ms) {\n        return setTimeout(fn, ms);\n      },\n      clearTimeout: function (id) {\n        return clearTimeout(id);\n      }\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\nexport { Interpreter, InterpreterStatus, interpret, spawn };","map":{"version":3,"names":["__values","__spreadArray","__read","__assign","SpecialTargets","ActionTypes","isStateConfig","State","bindActionToState","raise","send","errorPlatform","update","error","error$1","log","stop","start","cancel","initEvent","doneInvoke","toActionObjects","resolveActions","getActionFunction","IS_PRODUCTION","warn","mapContext","toObserver","isFunction","toSCXMLEvent","flatten","isPromiseLike","isObservable","isMachine","isBehavior","reportUnhandledExceptionOnInvocation","symbolObservable","isArray","toEventObject","isString","isActor","toInvokeSource","uniqueId","Scheduler","createDeferredActor","isSpawnedActor","registry","getGlobal","registerService","provide","consume","spawnBehavior","DEFAULT_SPAWN_OPTIONS","sync","autoForward","InterpreterStatus","Interpreter","machine","options","defaultOptions","_this","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","status","NotStarted","children","Map","forwardTo","_outgoingQueue","init","event","payload","batch","state","_event","Stopped","concat","name","id","JSON","stringify","data","Running","deferEvents","Error","scheduler","schedule","forward","nextState","_nextState","_state","sendTo","to","immediate","isParent","parent","Parent","target","get","undefined","type","done","scxmlEvent","origin","sessionId","config","predictableActionArguments","push","_exec","action","context","actionFunctionMap","actions","actionOrExec","exec","err","sendAction","delay","defer","sendId","activity","activities","Invoke","invokeSource","src","serviceCreator","services","resolvedData","source","meta","withContext","spawn","spawnActivity","stopChild","label","value","logger","resolvedOptions","clock","resolvedId","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","_c","next","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","item","shift","forEach","child","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","history","e_4_1","finalChildStateNode","configuration","find","sn","doneData","_l","_m","e_5_1","_stop","_stopChildren","onTransition","add","subscribe","nextListenerOrObserver","_","completeListener","observer","completeOnce","delete","complete","onDone","onStop","unsubscribe","onEvent","onSend","onChange","off","_init","register","resolvedState","resolveState","from","attachDev","initialize","clear","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","_p","keys","_q","key","clearTimeout","e_10_1","exitActions","sort","a","b","order","map","stateNode","onExit","preserveActionOrder","resolvedActions","updatedContext","newState","historyValue","filter","Internal","events","transitions","tags","changed","free","length","e_11","batchChanged","batchedActions","_loop_1","event_1","transition","apply","events_1","events_1_1","e_11_1","sender","bind","indexOf","nextEvents","some","nextEvent","e_12","e_12_1","setTimeout","removeChild","childId","entity","spawnPromise","Promise","resolve","spawnCallback","spawnActor","spawnObservable","spawnMachine","childService","actor","set","doneEvent","behavior","actorRef","promise","canceled","then","response","errorData","errorEvent","strict","handleError","unsubscribed","toJSON","getSnapshot","callback","receivers","emitted","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","global","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","fn","ms","console","interpret","resolveSpawnOptions","nameOrOptions","service","isLazyEntity","interpreter"],"sources":["/home/miltonejones/projects/state-cast/node_modules/xstate/es/interpreter.js"],"sourcesContent":["import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { raise, send, errorPlatform, update, error as error$1, log, stop, start, cancel } from './actionTypes.js';\nimport { initEvent, doneInvoke, toActionObjects, resolveActions, error, getActionFunction } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, toObserver, isFunction, toSCXMLEvent, flatten, isPromiseLike, isObservable, isMachine, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, toInvokeSource, uniqueId } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { createDeferredActor, isSpawnedActor } from './Actor.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\n\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    var _this = this;\n\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    this._outgoingQueue = [];\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this._nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to, immediate) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // perhaps those events should be rejected in the parent\n        // but atm it doesn't have easy access to all of the information that is required to do it reliably\n        if (_this.status !== InterpreterStatus.Stopped || _this.parent !== target || // we need to send events to the parent from exit handlers of a machine that reached its final state\n        _this.state.done) {\n          // Send SCXML events to machines\n          var scxmlEvent = __assign(__assign({}, event), {\n            name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n            origin: _this.sessionId\n          });\n\n          if (!immediate && _this.machine.config.predictableActionArguments) {\n            _this._outgoingQueue.push([target, scxmlEvent]);\n          } else {\n            target.send(scxmlEvent);\n          }\n        }\n      } else {\n        // Send normal events to other targets\n        if (!immediate && _this.machine.config.predictableActionArguments) {\n          _this._outgoingQueue.push([target, event.data]);\n        } else {\n          target.send(event.data);\n        }\n      }\n    };\n\n    this._exec = function (action, context, _event, actionFunctionMap) {\n      if (actionFunctionMap === void 0) {\n        actionFunctionMap = _this.machine.options.actions;\n      }\n\n      var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n      var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n      if (exec) {\n        try {\n          return exec(context, _event.data, !_this.machine.config.predictableActionArguments ? {\n            action: action,\n            state: _this.state,\n            _event: _event\n          } : {\n            action: action,\n            _event: _event\n          });\n        } catch (err) {\n          if (_this.parent) {\n            _this.parent.send({\n              type: 'xstate.error',\n              data: err\n            });\n          }\n\n          throw err;\n        }\n      }\n\n      switch (action.type) {\n        case send:\n          var sendAction = action;\n\n          if (typeof sendAction.delay === 'number') {\n            _this.defer(sendAction);\n\n            return;\n          } else {\n            if (sendAction.to) {\n              _this.sendTo(sendAction._event, sendAction.to, _event === initEvent);\n            } else {\n              _this.send(sendAction._event);\n            }\n          }\n\n          break;\n\n        case cancel:\n          _this.cancel(action.sendId);\n\n          break;\n\n        case start:\n          {\n            if (_this.status !== InterpreterStatus.Running) {\n              return;\n            }\n\n            var activity = action.activity; // If the activity will be stopped right after it's started\n            // (such as in transient states)\n            // don't bother starting the activity.\n\n            if ( // in v4 with `predictableActionArguments` invokes are called eagerly when the `this.state` still points to the previous state\n            !_this.machine.config.predictableActionArguments && !_this.state.activities[activity.id || activity.type]) {\n              break;\n            } // Invoked services\n\n\n            if (activity.type === ActionTypes.Invoke) {\n              var invokeSource = toInvokeSource(activity.src);\n              var serviceCreator = _this.machine.options.services ? _this.machine.options.services[invokeSource.type] : undefined;\n              var id = activity.id,\n                  data = activity.data;\n\n              if (!IS_PRODUCTION) {\n                warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n                \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(_this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n              }\n\n              var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n              if (!serviceCreator) {\n                // tslint:disable-next-line:no-console\n                if (!IS_PRODUCTION) {\n                  warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(_this.machine.id, \"'.\"));\n                }\n\n                return;\n              }\n\n              var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n              if (typeof serviceCreator === 'string') {\n                // TODO: warn\n                return;\n              }\n\n              var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n                data: resolvedData,\n                src: invokeSource,\n                meta: activity.meta\n              }) : serviceCreator;\n\n              if (!source) {\n                // TODO: warn?\n                return;\n              }\n\n              var options = void 0;\n\n              if (isMachine(source)) {\n                source = resolvedData ? source.withContext(resolvedData) : source;\n                options = {\n                  autoForward: autoForward\n                };\n              }\n\n              _this.spawn(source, id, options);\n            } else {\n              _this.spawnActivity(activity);\n            }\n\n            break;\n          }\n\n        case stop:\n          {\n            _this.stopChild(action.activity.id);\n\n            break;\n          }\n\n        case log:\n          var label = action.label,\n              value = action.value;\n\n          if (label) {\n            _this.logger(label, value);\n          } else {\n            _this.logger(value);\n          }\n\n          break;\n\n        default:\n          if (!IS_PRODUCTION) {\n            warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n          }\n\n          break;\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    /**\r\n     * @deprecated Use `.getSnapshot()` instead.\r\n     */\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if ((!this.machine.config.predictableActionArguments || // this is currently required to execute initial actions as the `initialState` gets cached\n    // we can't just recompute it (and execute actions while doing so) because we try to preserve identity of actors created within initial assigns\n    _event === initEvent) && this.options.execute) {\n      this.execute(this.state);\n    } else {\n      var item = void 0;\n\n      while (item = this._outgoingQueue.shift()) {\n        item[0].send(item[1]);\n      }\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    if (this.state.done) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this._stop();\n\n      this._stopChildren();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    var observer = toObserver(nextListenerOrObserver, _, completeListener);\n    this.listeners.add(observer.next); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      observer.next(this.state);\n    }\n\n    var completeOnce = function () {\n      _this.doneListeners.delete(completeOnce);\n\n      _this.stopListeners.delete(completeOnce);\n\n      observer.complete();\n    };\n\n    if (this.status === InterpreterStatus.Stopped) {\n      observer.complete();\n    } else {\n      this.onDone(completeOnce);\n      this.onStop(completeOnce);\n    }\n\n    return {\n      unsubscribe: function () {\n        _this.listeners.delete(observer.next);\n\n        _this.doneListeners.delete(completeOnce);\n\n        _this.stopListeners.delete(completeOnce);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n\n    this.machine._init();\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n\n  Interpreter.prototype._stopChildren = function () {\n    // TODO: think about converting those to actions\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n    this.children.clear();\n  };\n\n  Interpreter.prototype._stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n\n    try {\n      // we are going to stop within the current sync frame\n      // so we can safely just cancel this here as nothing async should be fired anyway\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    } // clear everything that might be enqueued\n\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    // TODO: add warning for stopping non-root interpreters\n    var _this = this; // grab the current scheduler as it will be replaced in _stop\n\n\n    var scheduler = this.scheduler;\n\n    this._stop(); // let what is currently processed to be finished\n\n\n    scheduler.schedule(function () {\n      // it feels weird to handle this here but we need to handle this even slightly \"out of band\"\n      var _event = toSCXMLEvent({\n        type: 'xstate.stop'\n      });\n\n      var nextState = provide(_this, function () {\n        var exitActions = flatten(__spreadArray([], __read(_this.state.configuration), false).sort(function (a, b) {\n          return b.order - a.order;\n        }).map(function (stateNode) {\n          return toActionObjects(stateNode.onExit, _this.machine.options.actions);\n        }));\n\n        var _a = __read(resolveActions(_this.machine, _this.state, _this.state.context, _event, [{\n          type: 'exit',\n          actions: exitActions\n        }], _this.machine.config.predictableActionArguments ? _this._exec : undefined, _this.machine.config.predictableActionArguments || _this.machine.config.preserveActionOrder), 2),\n            resolvedActions = _a[0],\n            updatedContext = _a[1];\n\n        var newState = new State({\n          value: _this.state.value,\n          context: updatedContext,\n          _event: _event,\n          _sessionid: _this.sessionId,\n          historyValue: undefined,\n          history: _this.state,\n          actions: resolvedActions.filter(function (action) {\n            return action.type !== raise && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n          }),\n          activities: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {},\n          done: _this.state.done,\n          tags: _this.state.tags,\n          machine: _this.machine\n        });\n        newState.changed = true;\n        return newState;\n      });\n\n      _this.update(nextState, _event);\n\n      _this._stopChildren();\n\n      registry.free(_this.sessionId);\n    });\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    if (!events.length) {\n      return;\n    }\n\n    var exec = !!this.machine.config.predictableActionArguments && this._exec;\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event, undefined, exec || undefined);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(_this.machine.config.predictableActionArguments ? nextState.actions : nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n\n  Interpreter.prototype._nextState = function (event, exec) {\n    var _this = this;\n\n    if (exec === void 0) {\n      exec = !!this.machine.config.predictableActionArguments && this._exec;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event, undefined, exec || undefined);\n    });\n    return nextState;\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    return this._nextState(event, false);\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to, true);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    this._exec(action, state.context, state._event, actionFunctionMap);\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (this.status !== InterpreterStatus.Running) {\n      return createDeferredActor(entity, name);\n    }\n\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = (_a = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n\n    this.children.set(id, (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (fn, ms) {\n        return setTimeout(fn, ms);\n      },\n      clearTimeout: function (id) {\n        return clearTimeout(id);\n      }\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}