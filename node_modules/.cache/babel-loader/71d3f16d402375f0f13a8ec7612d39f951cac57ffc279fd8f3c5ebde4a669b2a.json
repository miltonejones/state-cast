{"ast":null,"code":"import { createMachine, assign } from 'xstate';\nexport const podcastMachine = createMachine({\n  id: 'podcast_machine',\n  initial: 'begin',\n  context: {\n    param: '',\n    page: 1,\n    subscriptions: []\n  },\n  states: {\n    begin: {\n      invoke: {\n        src: 'setSubscriptions',\n        onDone: [{\n          target: 'idle',\n          actions: ['initSubscription', 'initPods']\n        }]\n      }\n    },\n    idle: {\n      on: {\n        SEARCH: {\n          target: 'searching',\n          actions: ['initSubscription', 'assignParamToContext']\n        },\n        CHANGE: {\n          target: 'idle',\n          actions: 'assignParamToContext'\n        },\n        BROWSE: {\n          target: 'shows',\n          actions: 'initSubscription'\n        },\n        DETAIL: {\n          target: 'podcast_detail',\n          actions: 'assignDetailToContext'\n        }\n      }\n    },\n    search_error: {\n      on: {\n        RECOVER: {\n          target: 'results'\n        }\n      }\n    },\n    searching: {\n      invoke: {\n        src: 'beginSearch',\n        onDone: [{\n          target: 'results',\n          actions: 'assignResultsToContext'\n        }],\n        onError: [{\n          target: 'search_error'\n        }]\n      }\n    },\n    shows: {\n      on: {\n        DETAIL: {\n          target: 'podcast_detail',\n          actions: 'assignShowToContext'\n        },\n        CLOSE: {\n          target: 'idle'\n        }\n      }\n    },\n    podcast_detail: {\n      initial: 'loading',\n      states: {\n        loaded: {\n          on: {\n            PLAY: {\n              target: 'startplay',\n              actions: 'assignTrack'\n            },\n            CLOSE: [{\n              target: '#podcast_machine.results',\n              cond: context => context.source === 'results'\n            }, {\n              target: '#podcast_machine.shows'\n            }],\n            HOME: {\n              target: '#podcast_machine.idle'\n            },\n            PAGE: {\n              actions: 'assignPage',\n              target: 'loaded'\n            },\n            SUBSCRIBE: {\n              target: 'loaded',\n              actions: 'assignSubscription'\n            }\n          }\n        },\n        error: {\n          on: {\n            RECOVER: {\n              target: '#podcast_machine.results'\n            }\n          }\n        },\n        loading: {\n          invoke: {\n            src: 'getDetail',\n            onDone: [{\n              target: 'loaded',\n              actions: 'assignPodcast'\n            }],\n            onError: [{\n              target: 'error',\n              actions: 'assignProblem'\n            }]\n          }\n        },\n        startplay: {\n          invoke: {\n            src: 'spawnPlayer',\n            onDone: [{\n              target: 'loaded'\n            }],\n            onError: [{\n              target: 'error',\n              actions: 'assignProblem'\n            }]\n          }\n        }\n      }\n    },\n    // playing: {\n    //   invoke: {\n    //     src: 'spawnPlayer',\n    //   },\n    //   on: {\n    //     CLOSE: {\n    //       target: 'podcast_detail.loaded',\n    //     },\n    //     HOME: {\n    //       target: 'idle',\n    //     },\n    //   },\n    // },\n    results: {\n      on: {\n        CLOSE: {\n          target: 'idle'\n        },\n        DETAIL: {\n          target: 'podcast_detail',\n          actions: 'assignDetailToContext'\n        },\n        PAGE: {\n          actions: 'assignPage',\n          target: 'results'\n        }\n      }\n    }\n  }\n}, {\n  actions: {\n    assignProblem: assign((context, event) => {\n      console.log({\n        context,\n        event\n      });\n      return {\n        error: {\n          message: event.data.message,\n          stack: event.data.stack\n        },\n        previous: event.type\n      };\n    }),\n    assignParamToContext: assign((context, event) => {\n      return {\n        param: event.value || context.param,\n        previous: event.type\n      };\n    }),\n    assignResultsToContext: assign((context, event) => {\n      return {\n        results: event.data,\n        previous: event.type,\n        page: 1\n      };\n    }),\n    assignPage: assign((context, event) => {\n      return {\n        page: event.page,\n        previous: event.type\n      };\n    }),\n    assignDetailToContext: assign((context, event) => {\n      return {\n        podcast: event.podcast,\n        previous: event.type,\n        source: event.source || 'results',\n        page: 1\n      };\n    }),\n    assignShowToContext: assign((context, event) => {\n      return {\n        podcast: event.podcast,\n        previous: event.type,\n        source: 'show',\n        page: 1\n      };\n    }),\n    assignTrack: assign((context, event) => {\n      // alert (JSON.stringify({event}))\n      return {\n        track: event.track,\n        previous: event.type\n      };\n    }),\n    initPods: assign((context, event) => {\n      return {\n        pods: event.data\n      };\n    }),\n    initSubscription: assign((context, event) => {\n      const subs = localStorage.getItem('subs');\n      try {\n        const json = JSON.parse(subs);\n        return {\n          subscriptions: json\n        };\n      } catch (ex) {\n        console.log(ex.message);\n      }\n      return {\n        subscriptions: []\n      };\n    }),\n    assignSubscription: assign((context, event) => {\n      const subs = (context.subscriptions || []).concat(event.podcast);\n      localStorage.setItem('subs', JSON.stringify(subs));\n      return {\n        subscriptions: subs\n      };\n    }),\n    assignPodcast: assign((context, event) => {\n      // alert (JSON.stringify({event}))\n      return {\n        detail: event.data,\n        previous: event.type,\n        page: 1\n      };\n    })\n  }\n});","map":{"version":3,"names":["createMachine","assign","podcastMachine","id","initial","context","param","page","subscriptions","states","begin","invoke","src","onDone","target","actions","idle","on","SEARCH","CHANGE","BROWSE","DETAIL","search_error","RECOVER","searching","onError","shows","CLOSE","podcast_detail","loaded","PLAY","cond","source","HOME","PAGE","SUBSCRIBE","error","loading","startplay","results","assignProblem","event","console","log","message","data","stack","previous","type","assignParamToContext","value","assignResultsToContext","assignPage","assignDetailToContext","podcast","assignShowToContext","assignTrack","track","initPods","pods","initSubscription","subs","localStorage","getItem","json","JSON","parse","ex","assignSubscription","concat","setItem","stringify","assignPodcast","detail"],"sources":["/home/miltonejones/projects/state-cast/src/machines/podcastMachine.js"],"sourcesContent":["import { createMachine, assign } from 'xstate';\r\n\r\nexport const podcastMachine = createMachine(\r\n  {\r\n    id: 'podcast_machine',\r\n    initial: 'begin',\r\n    context: {\r\n      param: '',\r\n      page: 1,\r\n      subscriptions: [],\r\n    },\r\n    states: {\r\n      begin: {\r\n        invoke: {\r\n          src: 'setSubscriptions',\r\n          onDone: [\r\n            {\r\n              target: 'idle',\r\n              actions: ['initSubscription', 'initPods'],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      idle: {\r\n        on: {\r\n          SEARCH: {\r\n            target: 'searching',\r\n            actions: ['initSubscription', 'assignParamToContext'],\r\n          },\r\n          CHANGE: {\r\n            target: 'idle',\r\n            actions: 'assignParamToContext',\r\n          },\r\n          BROWSE: {\r\n            target: 'shows',\r\n            actions: 'initSubscription',\r\n          },\r\n          DETAIL: {\r\n            target: 'podcast_detail',\r\n            actions: 'assignDetailToContext',\r\n          },\r\n        },\r\n      },\r\n      search_error: {\r\n        on: {\r\n          RECOVER: {\r\n            target: 'results',\r\n          },\r\n        },\r\n      },\r\n      searching: {\r\n        invoke: {\r\n          src: 'beginSearch',\r\n          onDone: [\r\n            {\r\n              target: 'results',\r\n              actions: 'assignResultsToContext',\r\n            },\r\n          ],\r\n          onError: [\r\n            {\r\n              target: 'search_error',\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      shows: {\r\n        on: {\r\n          DETAIL: {\r\n            target: 'podcast_detail',\r\n            actions: 'assignShowToContext',\r\n          },\r\n\r\n          CLOSE: {\r\n            target: 'idle',\r\n          },\r\n        },\r\n      },\r\n      podcast_detail: {\r\n        initial: 'loading',\r\n        states: {\r\n          loaded: {\r\n            on: {\r\n              PLAY: {\r\n                target: 'startplay',\r\n                actions: 'assignTrack',\r\n              },\r\n              CLOSE: [\r\n                {\r\n                  target: '#podcast_machine.results',\r\n                  cond: (context) => context.source === 'results',\r\n                },\r\n                {\r\n                  target: '#podcast_machine.shows',\r\n                },\r\n              ],\r\n              HOME: {\r\n                target: '#podcast_machine.idle',\r\n              },\r\n              PAGE: {\r\n                actions: 'assignPage',\r\n                target: 'loaded',\r\n              },\r\n              SUBSCRIBE: {\r\n                target: 'loaded',\r\n                actions: 'assignSubscription',\r\n              },\r\n            },\r\n          },\r\n          error: {\r\n            on: {\r\n              RECOVER: {\r\n                target: '#podcast_machine.results',\r\n              },\r\n            },\r\n          },\r\n          loading: {\r\n            invoke: {\r\n              src: 'getDetail',\r\n              onDone: [\r\n                {\r\n                  target: 'loaded',\r\n                  actions: 'assignPodcast',\r\n                },\r\n              ],\r\n              onError: [\r\n                {\r\n                  target: 'error',\r\n                  actions: 'assignProblem',\r\n                },\r\n              ],\r\n            },\r\n          },\r\n          startplay: {\r\n            invoke: {\r\n              src: 'spawnPlayer',\r\n              onDone: [\r\n                {\r\n                  target: 'loaded',\r\n                },\r\n              ],\r\n              onError: [\r\n                {\r\n                  target: 'error',\r\n                  actions: 'assignProblem',\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n      // playing: {\r\n      //   invoke: {\r\n      //     src: 'spawnPlayer',\r\n      //   },\r\n      //   on: {\r\n      //     CLOSE: {\r\n      //       target: 'podcast_detail.loaded',\r\n      //     },\r\n      //     HOME: {\r\n      //       target: 'idle',\r\n      //     },\r\n      //   },\r\n      // },\r\n      results: {\r\n        on: {\r\n          CLOSE: {\r\n            target: 'idle',\r\n          },\r\n          DETAIL: {\r\n            target: 'podcast_detail',\r\n            actions: 'assignDetailToContext',\r\n          },\r\n          PAGE: {\r\n            actions: 'assignPage',\r\n            target: 'results',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    actions: {\r\n      assignProblem: assign((context, event) => {\r\n        console.log({\r\n          context,\r\n          event,\r\n        });\r\n        return {\r\n          error: {\r\n            message: event.data.message,\r\n            stack: event.data.stack,\r\n          },\r\n          previous: event.type,\r\n        };\r\n      }),\r\n      assignParamToContext: assign((context, event) => {\r\n        return {\r\n          param: event.value || context.param,\r\n          previous: event.type,\r\n        };\r\n      }),\r\n\r\n      assignResultsToContext: assign((context, event) => {\r\n        return {\r\n          results: event.data,\r\n          previous: event.type,\r\n          page: 1,\r\n        };\r\n      }),\r\n\r\n      assignPage: assign((context, event) => {\r\n        return {\r\n          page: event.page,\r\n          previous: event.type,\r\n        };\r\n      }),\r\n\r\n      assignDetailToContext: assign((context, event) => {\r\n        return {\r\n          podcast: event.podcast,\r\n          previous: event.type,\r\n          source: event.source || 'results',\r\n          page: 1,\r\n        };\r\n      }),\r\n\r\n      assignShowToContext: assign((context, event) => {\r\n        return {\r\n          podcast: event.podcast,\r\n          previous: event.type,\r\n          source: 'show',\r\n          page: 1,\r\n        };\r\n      }),\r\n      assignTrack: assign((context, event) => {\r\n        // alert (JSON.stringify({event}))\r\n        return {\r\n          track: event.track,\r\n          previous: event.type,\r\n        };\r\n      }),\r\n\r\n      initPods: assign((context, event) => {\r\n        return {\r\n          pods: event.data,\r\n        };\r\n      }),\r\n\r\n      initSubscription: assign((context, event) => {\r\n        const subs = localStorage.getItem('subs');\r\n        try {\r\n          const json = JSON.parse(subs);\r\n          return {\r\n            subscriptions: json,\r\n          };\r\n        } catch (ex) {\r\n          console.log(ex.message);\r\n        }\r\n\r\n        return {\r\n          subscriptions: [],\r\n        };\r\n      }),\r\n\r\n      assignSubscription: assign((context, event) => {\r\n        const subs = (context.subscriptions || []).concat(event.podcast);\r\n        localStorage.setItem('subs', JSON.stringify(subs));\r\n        return {\r\n          subscriptions: subs,\r\n        };\r\n      }),\r\n\r\n      assignPodcast: assign((context, event) => {\r\n        // alert (JSON.stringify({event}))\r\n        return {\r\n          detail: event.data,\r\n          previous: event.type,\r\n          page: 1,\r\n        };\r\n      }),\r\n    },\r\n  }\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}